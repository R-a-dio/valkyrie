syntax = "proto3";
package radio;
option go_package = "github.com/R-a-dio/valkyrie/rpc";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service Manager {
    // Status returns the current status
    rpc Status(google.protobuf.Empty) returns (StatusResponse);
    rpc SetUser(User) returns (User);
    rpc SetStreamInfo(StreamInfo) returns (StreamInfo);
    rpc SetStreamerConfig(StreamerConfig) returns (StreamerConfig);
    rpc SetThread(google.protobuf.StringValue) returns (google.protobuf.StringValue);
    rpc SetListenerInfo(ListenerInfo) returns (ListenerInfo);
}

message StatusResponse {
    // the current user that is streaming
    User user = 1;
    // information about the current song
    StreamInfo info = 2;
    // information about the current listeners
    ListenerInfo listener_info = 3;
    // the current thread to be shown on the website or elsewhere
    string thread = 4;
    // the current configuration of the streamer
    StreamerConfig streamer_config = 5;
}

message Song {
    // song identifier (esong.id)
    int32 id = 1;
    // short metadata
    string metadata = 2; // required
}

message StreamInfo {
    // the current song being played
    Song song = 1;
    // the time this song started playing
    google.protobuf.Timestamp start_time = 3;
    // the time this song will end playing
    google.protobuf.Timestamp end_time = 4;
    // last time this song was played
    google.protobuf.Timestamp last_played = 5;
    // the amount of current listeners
    int64 listeners = 6;
}

message StreamerConfig {
    // can users request songs to be played right now
    bool requests_enabled = 1;
    // the queue implementation to use for the streamer
    string queue_used = 2;
}

message User {
    // user identifier
    int32 id = 1;
    // user nickname, this is only a display-name
    string nickname = 2;
    // indicates if this user is a robot or not
    bool is_robot = 3;
}

message ListenerInfo {
    // the amount of listeners to the stream
    int64 listeners = 1;
}