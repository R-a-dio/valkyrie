syntax = "proto3";
package radio.rpc;
option go_package = "github.com/R-a-dio/valkyrie/rpc";

service Manager {
    // Status returns the current status
    rpc Status(StatusRequest) returns (StatusResponse);
    rpc SetUser(User) returns (User);
    rpc SetSong(Song) returns (Song);
    rpc SetBotConfig(BotConfig) returns (BotConfig);
    rpc SetThread(Thread) returns (Thread);
    rpc SetListenerInfo(ListenerInfo) returns (ListenerInfo);
}

message StatusRequest {}

message StatusResponse {
    User user = 1;
    Song song = 2;

    ListenerInfo listener_info = 3;
    Thread thread = 4;
    BotConfig bot_config = 5;
}

message Song {
    // song identifier
    int32 id = 1;
    // short metadata
    string metadata = 2; // required
    // song start time in unix epoch
    int64 start_time = 3;
    // song end time in unix epoch, can be inaccurate
    int64 end_time = 4;
    // database track identifier
    int32 track_id = 5;
    // last time this song was played
    int64 last_played = 6;
}
    
message Thread {
    // thread string, most of the time an URL
    string thread = 1;
}

message BotConfig {
    bool requests_enabled = 1;
}

message User {
    // user identifier
    int32 id = 1;
    // user nickname, this is only a display-name
    string nickname = 2;
    // indicates if this user is a robot or not
    bool is_robot = 3;
}

message ListenerInfo {
    int64 listeners = 1;
}